@QDomDocument();
@QDomDocument(const QString& name);
@QDomDocument(QDomDocumentType* doctype);
@QDomDocument(QDomDocument* x);
QDomNode* createElement(const QString& tagName);
QDomNode* createDocumentFragment();
QDomNode* createTextNode(const QString& value);
QDomNode* createComment(const QString& value);
QDomNode* createCDATASection(const QString& value);
QDomNode* createProcessingInstruction(const QString& target, const QString& data);
QDomNode* createAttribute(const QString& name);
QDomNode* createEntityReference(const QString& name);
QDomNodeList* elementsByTagName(const QString& tagname) const;
QDomNode* importNode(QDomNode* importedNode, bool deep);
QDomNode* createElementNS(const QString& nsURI, const QString& qName);
QDomNode* createAttributeNS(const QString& nsURI, const QString& qName);
QDomNodeList* elementsByTagNameNS(const QString& nsURI, const QString& localName);
QDomNode* elementById(const QString& elementId);
QDomNode* doctype() const;
QDomImplementation* implementation() const;
QDomNode* documentElement() const;
bool setContent(QByteArray* buffer, bool namespaceProcessing, QString* errorMsg=0, int* errorLine=0, int* errorColumn=0);
bool setContent(const QString& text, bool namespaceProcessing, QString* errorMsg=0, int* errorLine=0, int* errorColumn=0);
bool setContent(QByteArray* buffer, QString* errorMsg=0, int* errorLine=0, int* errorColumn=0);
bool setContent(const QString& text, QString* errorMsg=0, int* errorLine=0, int* errorColumn=0);
virtual uint nodeType() const;
virtual bool isDocument() const;
QString toString() const;
QString toString(int indent) const;
