@AQTableDB(QWidget* parent=0, const char* name=0);
QString tableName() const;
void setTableName(const QString& fT);
QString foreignField() const;
void setForeignField(const QString& fN);
QString fieldRelation() const;
void setFieldRelation(const QString& fN);
void setReadOnly(const bool mode);
void setEditOnly(const bool mode);
void setInsertOnly(const bool mode);
void refresh();
void refresh(const bool refreshHead, const bool refreshData);
void insertRecord();
void editRecord();
void browseRecord();
void deleteRecord();
void copyRecord();
void show();
void setFocus();
void setFilter(const QString& f);
QString filter();
QString findFilter() const;
void setInitSearch(const QString& iS);
FLSqlCursor* cursor();
FLDataTable* tableRecords();
void close();
void setDisabled(const bool b);
void putFirstCol(const QString& c);
void moveCol(const QString& from, const QString& to);
void setOrderCols(QStringList& fields);
QStringList orderCols();
bool checkColumnEnabled() const;
void setCheckColumnEnabled(bool b);
QString aliasCheckColumn() const;
void setAliasCheckColumn(const QString& t);
bool findHidden() const;
void setFindHidden(bool h);
bool filterHidden() const;
void setFilterHidden(bool h);
void setColumnWidth(const QString& field, int w);
int columnWidth(int c);
void setRowHeight(int row, int h);
int rowHeight(int row);
bool showAllPixmaps() const;
void setShowAllPixmaps(bool s);
QString functionGetColor() const;
void setFunctionGetColor(const QString& f);
void exportToOds();
void switchSortOrder(int col=0);
