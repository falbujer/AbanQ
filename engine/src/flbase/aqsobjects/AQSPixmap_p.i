@QPixmap();
@QPixmap(int w, int h, int depth=-1, QPixmap::Optimization optimization=QPixmap::DefaultOptim);
@QPixmap(const QSize& size, int depth=-1, QPixmap::Optimization optimization=QPixmap::DefaultOptim);
@QPixmap(const QString& fileName, const char* format=0, QPixmap::ColorMode mode=QPixmap::Auto);
@QPixmap(const QString& fileName, const char* format, int conversion_flags);
@QPixmap(QByteArray* img_data);
@QPixmap(QPixmap* pixmap);
@QPixmap(QImage* img);
bool isNull() const;
int width() const;
int height() const;
QSize size() const;
QRect rect() const;
int depth() const;
void fill(const QColor& fillColor=Qt::white);
void fill(QColor* fillColor);
void fill(const QWidget* widget, int xofs, int yofs);
void fill(const QWidget* widget, const QPoint& ofs);
void resize(int w, int h);
void resize(const QSize& size);
# const QBitmap* mask() const;
# void setMask(const QBitmap& newmask);
bool selfMask() const;
bool hasAlpha() const;
bool hasAlphaChannel() const;
QPixmap* xForm(QWMatrix* matrix) const;
QImage* convertToImage() const;
bool convertFromImage(QImage* img, int conversion_flags=0);
bool loadFromData(QByteArray* buf, const char* format=0, int conversion_flags=0);
bool save(QIODevice* device, const char* format, int quality=-1) const;
bool load(const QString& fileName, const char* format, int conversion_flags);
bool save(const QString& fileName, const char* format, int quality=-1) const;
int serialNumber() const;
void setOptimization(QPixmap::Optimization optimization);
bool isQBitmap() const;
